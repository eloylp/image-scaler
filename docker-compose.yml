version: '3.7'
services:
  web:
    build:
      dockerfile: docker/Dockerfile
      context: .
    command: -Dloader.main=imagescaler.infrastructure.web.Web org.springframework.boot.loader.PropertiesLauncher
    ports:
      - "${HTTP_HOST_PORT}:8080"
    restart: always
    environment:
      - APP_NAME=${APP_NAME}
      - HTTP_PORT=8080
      - MONGO_URI=mongodb://mongodb/image_scaler
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MAX_UPLOAD_SIZE=5048576
      - TOPIC=process::images
    networks:
      - image-scaler
    depends_on:
      - redis
      - mongodb
  backend:
    build:
      dockerfile: docker/Dockerfile
      context: .
    command: -Dloader.main=imagescaler.infrastructure.backend.Scaler org.springframework.boot.loader.PropertiesLauncher
    restart: always
    environment:
      - MONGO_URI=mongodb://mongodb/image_scaler
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - TARGET_SCALES=100x100,300x300
      - TOPIC=process::images
      - HTTP_PORT=8080
    networks:
      - image-scaler
    depends_on:
      - redis
      - mongodb
  redis:
    image: redis:5.0.4
    restart: always
    ports:
      - 6379:5379
    networks:
      image-scaler:
        aliases:
          - redis
  mongodb:
    image: mongo:4.0
    volumes:
      - mongodb:/data/db
    ports:
      - 27017:27017
    networks:
      image-scaler:
        aliases:
          - mongodb
networks:
  image-scaler:
volumes:
  mongodb: